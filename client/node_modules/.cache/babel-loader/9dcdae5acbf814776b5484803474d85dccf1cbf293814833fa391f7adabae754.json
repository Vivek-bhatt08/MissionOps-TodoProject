{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uk13v\\\\OneDrive\\\\Desktop\\\\taskmaster-pro\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  // NEW state for the form inputs\n  const [text, setText] = useState('');\n  const [priority, setPriority] = useState('Medium');\n  const [dueDate, setDueDate] = useState('');\n\n  // NEW state for editing\n  const [editingId, setEditingId] = useState(null);\n  const [editingText, setEditingText] = useState('');\n\n  // NEW state for filtering\n  const [filter, setFilter] = useState('All');\n  const {\n    logout\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get('/api/todos').then(res => setTodos(res.data)).catch(err => console.error(err));\n  }, []);\n\n  // MODIFIED to handle new fields\n  const handleAddTodo = async e => {\n    e.preventDefault();\n    if (!text.trim()) return;\n    try {\n      const newTodo = {\n        text,\n        priority,\n        dueDate: dueDate || null\n      };\n      const res = await axios.post('/api/todos', newTodo);\n      setTodos([res.data, ...todos]);\n      // Reset form\n      setText('');\n      setPriority('Medium');\n      setDueDate('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const toggleComplete = async (id, completed) => {\n    try {\n      const res = await axios.put(`/api/todos/${id}`, {\n        completed: !completed\n      });\n      setTodos(todos.map(todo => todo._id === id ? res.data : todo));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      // Sends the delete request to the backend\n      await axios.delete(`/api/todos/${id}`);\n      // Updates the state to remove the todo from the UI instantly\n      setTodos(todos.filter(todo => todo._id !== id));\n    } catch (err) {\n      console.error(\"Error deleting task:\", err);\n      alert(\"Could not delete the task.\");\n    }\n  };\n\n  // NEW function to start editing a todo\n  const handleStartEdit = todo => {\n    setEditingId(todo._id);\n    setEditingText(todo.text);\n  };\n\n  // NEW function to save an edited todo\n  const handleSaveEdit = async id => {\n    try {\n      const res = await axios.put(`/api/todos/${id}`, {\n        text: editingText\n      });\n      setTodos(todos.map(todo => todo._id === id ? res.data : todo));\n      setEditingId(null);\n      setEditingText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n\n  // NEW logic to filter todos before rendering\n  const filteredTodos = todos.filter(todo => {\n    if (filter === 'Active') return !todo.completed;\n    if (filter === 'Completed') return todo.completed;\n    return true; // 'All'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TaskMaster Pro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-btn\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddTodo,\n      className: \"todo-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Add a new task...\",\n        className: \"task-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: priority,\n        onChange: e => setPriority(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Low\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Medium\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"High\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('All'),\n        className: filter === 'All' ? 'active' : '',\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('Active'),\n        className: filter === 'Active' ? 'active' : '',\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('Completed'),\n        className: filter === 'Completed' ? 'active' : '',\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `todo-item ${todo.completed ? 'completed' : ''}`,\n        children: editingId === todo._id ?\n        /*#__PURE__*/\n        // NEW Edit mode view\n        _jsxDEV(\"div\", {\n          className: \"edit-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editingText,\n            onChange: e => setEditingText(e.target.value),\n            className: \"edit-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSaveEdit(todo._id),\n            className: \"save-btn\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditingId(null),\n            className: \"cancel-btn\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }, this) :\n        /*#__PURE__*/\n        // Normal view\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => toggleComplete(todo._id, todo.completed),\n              className: \"task-text\",\n              children: todo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `priority ${todo.priority.toLowerCase()}`,\n                children: todo.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 41\n              }, this), todo.dueDate && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"due-date\",\n                children: [\"Due: \", new Date(todo.dueDate).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleStartEdit(todo),\n              className: \"edit-btn\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(todo._id),\n              className: \"delete-btn\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, todo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"OMblMXr4Zp0x3iwib2mGUK3m/FU=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AuthContext","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","todos","setTodos","text","setText","priority","setPriority","dueDate","setDueDate","editingId","setEditingId","editingText","setEditingText","filter","setFilter","logout","navigate","get","then","res","data","catch","err","console","error","handleAddTodo","e","preventDefault","trim","newTodo","post","toggleComplete","id","completed","put","map","todo","_id","handleDelete","delete","alert","handleStartEdit","handleSaveEdit","handleLogout","filteredTodos","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","placeholder","toLowerCase","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/uk13v/OneDrive/Desktop/taskmaster-pro/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n    const [todos, setTodos] = useState([]);\r\n    // NEW state for the form inputs\r\n    const [text, setText] = useState('');\r\n    const [priority, setPriority] = useState('Medium');\r\n    const [dueDate, setDueDate] = useState('');\r\n\r\n    // NEW state for editing\r\n    const [editingId, setEditingId] = useState(null);\r\n    const [editingText, setEditingText] = useState('');\r\n\r\n    // NEW state for filtering\r\n    const [filter, setFilter] = useState('All');\r\n\r\n    const { logout } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/todos')\r\n            .then(res => setTodos(res.data))\r\n            .catch(err => console.error(err));\r\n    }, []);\r\n\r\n    // MODIFIED to handle new fields\r\n    const handleAddTodo = async (e) => {\r\n        e.preventDefault();\r\n        if(!text.trim()) return;\r\n        try {\r\n            const newTodo = { text, priority, dueDate: dueDate || null };\r\n            const res = await axios.post('/api/todos', newTodo);\r\n            setTodos([res.data, ...todos]);\r\n            // Reset form\r\n            setText('');\r\n            setPriority('Medium');\r\n            setDueDate('');\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const toggleComplete = async (id, completed) => {\r\n        try {\r\n            const res = await axios.put(`/api/todos/${id}`, { completed: !completed });\r\n            setTodos(todos.map(todo => (todo._id === id ? res.data : todo)));\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            // Sends the delete request to the backend\r\n            await axios.delete(`/api/todos/${id}`);\r\n            // Updates the state to remove the todo from the UI instantly\r\n            setTodos(todos.filter(todo => todo._id !== id));\r\n        } catch (err) {\r\n            console.error(\"Error deleting task:\", err);\r\n            alert(\"Could not delete the task.\");\r\n        }\r\n    };\r\n\r\n    // NEW function to start editing a todo\r\n    const handleStartEdit = (todo) => {\r\n        setEditingId(todo._id);\r\n        setEditingText(todo.text);\r\n    };\r\n    \r\n    // NEW function to save an edited todo\r\n    const handleSaveEdit = async (id) => {\r\n        try {\r\n            const res = await axios.put(`/api/todos/${id}`, { text: editingText });\r\n            setTodos(todos.map(todo => (todo._id === id ? res.data : todo)));\r\n            setEditingId(null);\r\n            setEditingText('');\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n        navigate('/login');\r\n    };\r\n\r\n    // NEW logic to filter todos before rendering\r\n    const filteredTodos = todos.filter(todo => {\r\n        if (filter === 'Active') return !todo.completed;\r\n        if (filter === 'Completed') return todo.completed;\r\n        return true; // 'All'\r\n    });\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <header className=\"dashboard-header\">\r\n                <h1>TaskMaster Pro</h1>\r\n                <button onClick={handleLogout} className=\"logout-btn\">Logout</button>\r\n            </header>\r\n\r\n            {/* MODIFIED Form with new fields */}\r\n            <form onSubmit={handleAddTodo} className=\"todo-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                    placeholder=\"Add a new task...\"\r\n                    className=\"task-input\"\r\n                />\r\n                <select value={priority} onChange={(e) => setPriority(e.target.value)}>\r\n                    <option value=\"Low\">Low</option>\r\n                    <option value=\"Medium\">Medium</option>\r\n                    <option value=\"High\">High</option>\r\n                </select>\r\n                <input\r\n                    type=\"date\"\r\n                    value={dueDate}\r\n                    onChange={(e) => setDueDate(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Add Task</button>\r\n            </form>\r\n\r\n            {/* NEW Filter buttons */}\r\n            <div className=\"filter-buttons\">\r\n                <button onClick={() => setFilter('All')} className={filter === 'All' ? 'active' : ''}>All</button>\r\n                <button onClick={() => setFilter('Active')} className={filter === 'Active' ? 'active' : ''}>Active</button>\r\n                <button onClick={() => setFilter('Completed')} className={filter === 'Completed' ? 'active' : ''}>Completed</button>\r\n            </div>\r\n\r\n            <ul className=\"todo-list\">\r\n                {/* MODIFIED to map over filteredTodos */}\r\n                {filteredTodos.map(todo => (\r\n                    <li key={todo._id} className={`todo-item ${todo.completed ? 'completed' : ''}`}>\r\n                        {editingId === todo._id ? (\r\n                            // NEW Edit mode view\r\n                            <div className=\"edit-view\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={editingText}\r\n                                    onChange={(e) => setEditingText(e.target.value)}\r\n                                    className=\"edit-input\"\r\n                                />\r\n                                <button onClick={() => handleSaveEdit(todo._id)} className=\"save-btn\">Save</button>\r\n                                <button onClick={() => setEditingId(null)} className=\"cancel-btn\">Cancel</button>\r\n                            </div>\r\n                        ) : (\r\n                            // Normal view\r\n                            <>\r\n                                <div className=\"task-details\">\r\n                                    <span onClick={() => toggleComplete(todo._id, todo.completed)} className=\"task-text\">\r\n                                        {todo.text}\r\n                                    </span>\r\n                                    {/* NEW Priority and Due Date display */}\r\n                                    <div className=\"meta-data\">\r\n                                        <span className={`priority ${todo.priority.toLowerCase()}`}>{todo.priority}</span>\r\n                                        {todo.dueDate && (\r\n                                            <span className=\"due-date\">\r\n                                                Due: {new Date(todo.dueDate).toLocaleDateString()}\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"task-actions\">\r\n                                    <button onClick={() => handleStartEdit(todo)} className=\"edit-btn\">Edit</button>\r\n                                    <button onClick={() => handleDelete(todo._id)} className=\"delete-btn\">Delete</button>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}